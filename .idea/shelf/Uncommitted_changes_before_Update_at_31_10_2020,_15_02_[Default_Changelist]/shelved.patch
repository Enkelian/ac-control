Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(date 1604152724074)
+++ .idea/gradle.xml	(date 1604152724074)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
+</project>
\ No newline at end of file
Index: src/main/java/controller/Fan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/Fan.java	(date 1603554560569)
+++ src/main/java/controller/Fan.java	(date 1603554560569)
@@ -0,0 +1,43 @@
+package controller;
+
+public class Fan {
+
+    private float speed;
+    private float acceleration;
+    private float timeDelta;
+
+    public Fan(float speed, float acceleration){
+        this.speed = speed;
+        this.acceleration = acceleration;
+    }
+
+    public Fan(float speed){
+        this.speed = speed;
+        this.acceleration = 0.0f;
+    }
+
+    public float getSpeed() {
+        return speed;
+    }
+
+    public void setSpeed(float speed) {
+        this.speed = speed;
+    }
+
+    public float getAcceleration() {
+        return acceleration;
+    }
+
+    public void setAcceleration(float acceleration) {
+        this.acceleration = acceleration;
+    }
+
+    public void setTimeDelta(float timeDelta){
+        this.timeDelta = timeDelta;
+    }
+
+    public void recalculateSpeed(){
+        this.speed += this.acceleration * timeDelta;
+        if(this.speed < 0) this.speed = 0;
+    }
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1604152768118)
+++ .idea/vcs.xml	(date 1604152768118)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/controller/FuzzyStats.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/FuzzyStats.java	(date 1603549350919)
+++ src/main/java/controller/FuzzyStats.java	(date 1603549350919)
@@ -0,0 +1,53 @@
+package controller;
+
+public class FuzzyStats {
+
+    private float temperatureLevel;
+    private float airHumidity;
+    private Fan fan;
+
+    public FuzzyStats(float temperatureLevel, float airHumidity, float fanSpeed){
+        this.temperatureLevel = temperatureLevel;
+        this.airHumidity = airHumidity;
+        this.fan = new Fan(fanSpeed);
+    }
+
+
+    public float getTemperatureLevel() {
+        return temperatureLevel;
+    }
+
+    public void setTemperatureLevel(float temperatureLevel) {
+        this.temperatureLevel = temperatureLevel;
+    }
+
+    public float getAirHumidity() {
+        return airHumidity;
+    }
+
+    public void setAirHumidity(float airHumidity) {
+        this.airHumidity = airHumidity;
+    }
+
+    public void setFanSpeed(float fanSpeed) {
+        this.fan.setSpeed(fanSpeed);
+    }
+
+    public float getFanSpeed(){ return this.fan.getSpeed(); }
+
+    public void setFanAcceleration(float fanAcceleration){
+        this.fan.setAcceleration(fanAcceleration);
+    }
+
+    public float getFanAcceleration() { return this.fan.getAcceleration(); }
+
+    public void recalculate(){ this.fan.recalculateSpeed(); }
+
+    @Override
+    public String toString() {
+        return "FAN SPEED: " + this.getFanSpeed() +
+                "\n TEMPERATURE: " + this.temperatureLevel +
+                "\n AIR HUMIDITY: " + this.airHumidity +
+                "\n FAN ACCELERATION: " + this.getFanAcceleration();
+    }
+}
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew	(date 1603455653182)
+++ gradlew	(date 1603455653182)
@@ -0,0 +1,185 @@
+#!/usr/bin/env sh
+
+#
+# Copyright 2015 the original author or authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn () {
+    echo "$*"
+}
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
+esac
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=`expr $i + 1`
+    done
+    case $i in
+        0) set -- ;;
+        1) set -- "$args0" ;;
+        2) set -- "$args0" "$args1" ;;
+        3) set -- "$args0" "$args1" "$args2" ;;
+        4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
+}
+APP_ARGS=`save "$@"`
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+exec "$JAVACMD" "$@"
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(date 1603455653254)
+++ gradlew.bat	(date 1603455653254)
@@ -0,0 +1,104 @@
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Resolve any "." and ".." in APP_HOME to make it shorter.
+for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windows variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: src/main/java/controller/CounterApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/CounterApp.java	(date 1603553192154)
+++ src/main/java/controller/CounterApp.java	(date 1603553192154)
@@ -0,0 +1,64 @@
+package controller;
+
+import javafx.application.Application;
+import javafx.application.Platform;
+import javafx.scene.Scene;
+import javafx.scene.layout.StackPane;
+import javafx.scene.text.Text;
+import javafx.stage.Stage;
+
+public class CounterApp extends Application {
+
+    private int count = 0;
+    private final Text text = new Text(Integer.toString(count));
+
+    private void incrementCount() {
+        count++;
+        text.setText(Integer.toString(count));
+    }
+
+    @Override
+    public void start(Stage primaryStage) {
+        StackPane root = new StackPane();
+        root.getChildren().add(text);
+
+        Scene scene = new Scene(root, 200, 200);
+
+        // longrunning operation runs on different thread
+        Thread thread = new Thread(new Runnable() {
+
+            @Override
+            public void run() {
+                Runnable updater = new Runnable() {
+
+                    @Override
+                    public void run() {
+                        incrementCount();
+                    }
+                };
+
+                while (true) {
+                    try {
+                        Thread.sleep(1000);
+                    } catch (InterruptedException ex) {
+                    }
+
+                    // UI update is run on the Application thread
+                    Platform.runLater(updater);
+                }
+            }
+
+        });
+        // don't let thread prevent JVM shutdown
+        thread.setDaemon(true);
+        thread.start();
+
+        primaryStage.setScene(scene);
+        primaryStage.show();
+    }
+
+    public static void main(String[] args) {
+        launch(args);
+    }
+
+}
Index: src/main/java/controller/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/Main.java	(date 1603553431321)
+++ src/main/java/controller/Main.java	(date 1603553431321)
@@ -0,0 +1,10 @@
+package controller;
+
+public class Main {
+
+    public static void main(String[] args) {
+        ControllerApplication.main(new String[]{});
+//        CounterApp.main(null);
+    }
+
+}
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(date 1603455653118)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1603455653118)
@@ -0,0 +1,5 @@
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.3-bin.zip
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
Index: src/main/java/controller/ControllerApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/ControllerApplication.java	(date 1603555093970)
+++ src/main/java/controller/ControllerApplication.java	(date 1603555093970)
@@ -0,0 +1,93 @@
+package controller;
+
+import javafx.animation.*;
+import javafx.application.Application;
+import javafx.event.ActionEvent;
+import javafx.event.EventHandler;
+import javafx.scene.Group;
+import javafx.scene.Scene;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+import javafx.scene.paint.Color;
+import javafx.stage.Stage;
+import javafx.util.Duration;
+
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+
+
+public class ControllerApplication extends Application {
+
+    private FuzzyEvaluator fuzzyEvaluator;
+    static int rotationTime = 1000;
+    static int angle = 360;
+
+    public static void main(String[] args) {
+        launch(args);
+
+    }
+
+    private void fuzzySetup(){
+        FuzzyStats fuzzyStats = new FuzzyStats(10, 40, 10);
+        fuzzyEvaluator = new FuzzyEvaluator("src/main/resources/fuzzy_speed.fcl", fuzzyStats);
+    }
+
+    @Override
+    public void start(Stage primaryStage) throws FileNotFoundException {
+
+        fuzzySetup();
+
+        primaryStage.setTitle("AC Control");
+
+        FileInputStream inputStream = new FileInputStream("src/main/resources/fan.png");
+        Image image = new Image(inputStream);
+
+        ImageView imageView = new ImageView(image);
+
+        imageView.setX(100);
+        imageView.setY(100);
+
+        imageView.setFitHeight(300);
+        imageView.setFitWidth(300);
+        imageView.setPreserveRatio(true);
+
+        Group root = new Group(imageView);
+        Scene scene = new Scene(root, 500, 500, Color.BLACK);
+
+
+        primaryStage.setScene(scene);
+        primaryStage.show();
+
+        Timeline timeline = new Timeline(new KeyFrame(Duration.millis(rotationTime), (e) ->
+//                new KeyValue(imageView.rotateProperty(), 360, Interpolator.LINEAR)
+                {
+                    RotateTransition rotateTransition = new RotateTransition();
+
+                    rotateTransition.setDuration(Duration.millis(rotationTime));
+
+                    rotateTransition.setNode(imageView);
+
+                    rotateTransition.setByAngle(angle);
+
+                    rotateTransition.setInterpolator(Interpolator.LINEAR);
+
+                    rotateTransition.setAutoReverse(false);
+
+                    rotateTransition.play();
+
+                    fuzzyEvaluator.evaluate();
+
+                    angle = (int) fuzzyEvaluator.getFanSpeed() * rotationTime/1000;
+                    fuzzyEvaluator.printStats();
+
+                    System.out.println(angle);
+                }));
+        timeline.setCycleCount(Animation.INDEFINITE);
+        timeline.play();
+
+    }
+//TODO: edit speed
+//TODO: add thermometer and show air humidity
+
+
+}
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(date 1603460008686)
+++ build.gradle	(date 1603460008686)
@@ -0,0 +1,26 @@
+plugins {
+    id 'java'
+    id 'org.openjfx.javafxplugin' version '0.0.9'
+}
+
+group 'org.example'
+version '1.0-SNAPSHOT'
+
+repositories {
+    mavenCentral()
+    maven {
+        url "https://repository.ow2.org/nexus/content/repositories/public/"
+    }
+}
+
+javafx {
+    version = '12'
+    modules = [ 'javafx.controls', 'javafx.fxml' ]
+}
+
+dependencies {
+    testCompile group: 'junit', name: 'junit', version: '4.12'
+    // https://mvnrepository.com/artifact/net.sourceforge.jFuzzyLogic/jFuzzyLogic
+    compile group: 'net.sourceforge.jFuzzyLogic', name: 'jFuzzyLogic', version: '1.+'
+}
+
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(date 1603455639475)
+++ settings.gradle	(date 1603455639475)
@@ -0,0 +1,2 @@
+rootProject.name = 'ac_control'
+
Index: src/main/java/controller/EvaluationTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/EvaluationTask.java	(date 1603553065805)
+++ src/main/java/controller/EvaluationTask.java	(date 1603553065805)
@@ -0,0 +1,45 @@
+package controller;
+
+
+import javafx.application.Platform;
+import javafx.concurrent.Task;
+
+public class EvaluationTask implements Runnable {
+
+    private final FuzzyEvaluator fuzzyEvaluator;
+
+    public EvaluationTask(FuzzyEvaluator evaluator){ this.fuzzyEvaluator = evaluator; }
+
+//    @Override
+//    protected Object call() throws Exception {
+//
+////        while(true) {
+////            if(isCancelled()) break;
+//
+//            Thread.sleep(1000);
+//
+//
+//            return null;
+////        }
+//
+//    }
+
+    @Override
+    public void run() {
+        Runnable updater = new Runnable() {
+            @Override
+            public void run() {
+                fuzzyEvaluator.evaluate();
+                fuzzyEvaluator.printStats();
+            }
+        };
+
+        while(true){
+            try{ Thread.sleep(1000); }
+            catch (InterruptedException e) { e.printStackTrace();}
+
+            Platform.runLater(updater);
+        }
+
+    }
+}
Index: src/main/java/controller/FuzzyEvaluator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/controller/FuzzyEvaluator.java	(date 1603549544595)
+++ src/main/java/controller/FuzzyEvaluator.java	(date 1603549544595)
@@ -0,0 +1,48 @@
+package controller;
+
+import net.sourceforge.jFuzzyLogic.FIS;
+import net.sourceforge.jFuzzyLogic.rule.FuzzyRuleSet;
+
+public class FuzzyEvaluator {
+
+    private FIS fis;
+    private FuzzyStats fuzzyStats;
+    private FuzzyRuleSet fuzzyRuleSet;
+
+
+    public FuzzyEvaluator(String fileName, FuzzyStats stats){
+
+        fuzzyStats = stats;
+
+        fis = FIS.load(fileName, false);
+
+        fuzzyRuleSet = fis.getFuzzyRuleSet();
+
+        evaluate();
+
+    }
+
+    public synchronized void evaluate(){
+
+        fuzzyRuleSet.setVariable("temperature_level", fuzzyStats.getTemperatureLevel());
+        fuzzyRuleSet.setVariable("fan_speed", fuzzyStats.getFanSpeed());
+        fuzzyRuleSet.setVariable("air_humidity", fuzzyStats.getAirHumidity());
+
+        fuzzyRuleSet.evaluate();
+
+        fuzzyStats.setFanAcceleration((float) fuzzyRuleSet.getVariable("fan_acceleration").getValue());
+
+        fuzzyStats.recalculate();
+
+    }
+
+    public synchronized float getFanSpeed(){
+        return fuzzyStats.getFanSpeed();
+    }
+
+    public synchronized void printStats(){
+        System.out.println("================ CURRENT STATS ================");
+        System.out.println(fuzzyStats.toString());
+        System.out.println("\n");
+    }
+}
Index: src/main/resources/fuzzy_speed.fcl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/fuzzy_speed.fcl	(date 1603554946566)
+++ src/main/resources/fuzzy_speed.fcl	(date 1603554946566)
@@ -0,0 +1,65 @@
+FUNCTION_BLOCK
+
+VAR_INPUT
+temperature_level : REAL;
+fan_speed : REAL;
+air_humidity : REAL;
+END_VAR
+VAR_OUTPUT
+fan_acceleration: REAL;
+END_VAR
+
+FUZZIFY temperature_level
+TERM low := (5, 1) (10, 1) (16, 1) (18, 0.50) (20, 0);
+TERM medium := (18, 0.50) (20, 1) (23, 1) (24, 0.5) (25, 0);
+TERM high := (25, 0.50) (26, 1) (30, 1);
+END_FUZZIFY
+
+FUZZIFY fan_speed
+TERM very_low := (20, 1) (30, 1) (40, 1) (50, 0.50) (60, 0) ;
+TERM low := (50, 0) (60, 0.50) (70, 1) (80, 1) (90, 0.50) (100, 0);
+TERM medium := (90, 0) (100, 0.50) (110, 1) (120, 1) (130, 0.50) (140, 0);
+TERM high := (130, 0) (140, 0.50) (150, 1) (160, 1);
+END_FUZZIFY
+
+FUZZIFY air_humidity
+TERM low := (1, 0) (3, 0.50) (5, 1) (7, 1) (9, 0.50) (11, 0);
+TERM medium := (25, 0) (30, 0.50) (35, 0.70) (40, 1) (45, 0.70) (50, 0.50) (55, 0);
+TERM high := (50, 0) (55, 0.50) (60, 1);
+END_FUZZIFY
+
+DEFUZZIFY fan_acceleration
+TERM negative := (-15, 1) (-10, 1) (-5, 0.50) (0, 0);
+TERM zero := (-5, 0) (-2.5, 0.5) (0, 1) (2.5, 0.5) (5, 0);
+TERM positive := (0, 0) (5, 0.50) (10, 1) (15, 1);
+METHOD : COG;
+DEFAULT := 0;
+END_DEFUZZIFY
+
+RULEBLOCK first
+AND: MIN;
+ACT: MIN;
+
+RULE 0:  IF temperature_level IS low AND fan_speed IS high THEN fan_acceleration IS negative;
+RULE 1:  IF temperature_level IS low AND fan_speed IS medium THEN fan_acceleration IS negative;
+RULE 2:  IF temperature_level IS low AND fan_speed IS low THEN fan_acceleration IS negative;
+RULE 3:  IF temperature_level IS low AND fan_speed IS very_low THEN fan_acceleration IS zero;
+
+RULE 4:  IF temperature_level IS medium AND air_humidity IS high AND fan_speed IS high THEN fan_acceleration IS negative;
+RULE 5:  IF temperature_level IS medium AND air_humidity IS high AND fan_speed IS medium THEN fan_acceleration IS zero;
+RULE 6:  IF temperature_level IS medium AND air_humidity IS high AND fan_speed IS low THEN fan_acceleration IS positive;
+RULE 7:  IF temperature_level IS medium AND air_humidity IS high AND fan_speed IS very_low THEN fan_acceleration is positive;
+RULE 8:  IF temperature_level IS medium AND air_humidity IS medium THEN fan_acceleration IS zero;
+RULE 9:  IF temperature_level IS medium AND air_humidity IS low AND fan_speed IS high THEN fan_acceleration IS negative;
+RULE 10: IF temperature_level IS medium AND air_humidity IS low AND fan_speed IS medium THEN fan_acceleration IS negative;
+RULE 11: IF temperature_level IS medium AND air_humidity IS low AND fan_speed IS low THEN fan_acceleration IS zero;
+RULE 12: IF temperature_level IS medium AND air_humidity IS low AND fan_speed IS very_low THEN fan_acceleration IS zero;
+
+RULE 13: IF temperature_level IS high AND fan_speed IS high THEN fan_acceleration IS zero;
+RULE 14: IF temperature_level IS high AND fan_speed IS medium THEN fan_acceleration IS positive;
+RULE 15: IF temperature_level IS high AND fan_speed IS low THEN fan_acceleration IS positive;
+RULE 16: IF temperature_level IS high AND fan_speed IS very_low THEN fan_acceleration IS positive;
+
+END_RULEBLOCK
+
+END_FUNCTION_BLOCK
\ No newline at end of file
